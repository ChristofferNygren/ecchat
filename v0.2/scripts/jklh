"use strict";

const chatRooms = ["Room one", "Room two", "Room three"];

let user = "";

let session = [{room: 0, user: "", date: "", message: ""}];

let currentRoom = 0;

let socket = io();

let onlineUsers = [];

let statusForUpdateOfOnlineUsers = true;


//user.session[0] = new NewMessageInChat(0, user.username,createTimeStamp(),`= ONLINE!`);

// *********************************************************************************************************************
function NewMessageInChat(room, user,date,message)
{
    this.room = room;
    this.user = user;
    this.date = date;
    this.message = message;
}




$("#log-out-button").on("click", logOutUser);
$("#room0").click(function(){
    ChangeRoom(0)
});
$("#room1").click(function(){
    ChangeRoom(1)
});
$("#room2").click(function(){
    ChangeRoom(2)
});

$(document).ready(function(){
    checkWhoIsHere();
    UserOnlineList();
    setInterval(UserOnlineList,1000);

});

user.session[user.session.length].room=0;
user.session[user.session.length].user.push(user.username);
user.session[user.session.length].date.push(createTimeStamp());
user.session[user.session.length].message.push("...");

// *********************************************************************************************************************
// ----------- CLIENT-SIDE CHAT:


$(document).on("submit", sendMessage);



function sendMessage(e)
{
    e.preventDefault();

    let messageFromClient =  `${createTimeStamp()}|${user.username}|${document.getElementById("chatmess").value}|${currentRoom}`;

    socket.emit("chat message", messageFromClient);

    newMessages();

    $("#chatmess").val("");

}

function checkWhoIsHere()
{
    user.username = localStorage.getItem("user");

    $("#this-is-me").text(user.username);




}

function newMessages()
{
    socket.on("chat message", function(msg)
    {
        let newChatMessage = msg.split("|");

        let tempDate = newChatMessage[0];
        let tempUsername = newChatMessage[1];
        let tempMessage = newChatMessage[2];
        let tempRoom = newChatMessage[3];

/*
        user.session[user.session.length].room = tempRoom;
        user.session[user.session.length].user = tempUsername;
        user.session[user.session.length].date = createTimeStamp();
        user.session[user.session.length].message = tempMessage;
*/
        user.session[user.session.length].room.push(tempRoom);
        user.session[user.session.length].username.push(tempUsername);
        user.session[user.session.length].date.push(tempDate);
        user.session[user.session.length].message.push(tempMessage);



            let tempCounter = 0;

            for (let i = 0; i < user.session.length; i++)
            {

                if (user.session[i].message === tempMessage) tempCounter++;
                else user.session[user.session.length].message = tempMessage;

            }

            if (tempCounter <= 1) {

                for(let index=0;index < chatRooms.length;index++) // <<<<
                {

                    if(index === currentRoom)
                    {
                        let messageToDisplay = `${tempUsername} ${tempDate}: ${tempMessage}`;

                        $("<p></p>").text(messageToDisplay).appendTo("#list-of-messages");
                        console.log(user.session[length - 1].message); //error, testa ersÃ¤tt med preventDefault

                    }
                }


           }


    });

}

// *********************************************************************************************************************
function createTimeStamp()
{
    let currentDate = new Date().toLocaleString('en-GB');
    return `${currentDate}`;
}


// *********************************************************************************************************************
function logOutUser()
{


    window.location.assign("/html/logout.html");

}
// *********************************************************************************************************************
function UserOnlineList()
{


    if(statusForUpdateOfOnlineUsers) $.ajax({
        url: "../data/usersOnline.json",
        success: (response) => {
            $("#list-of-users").empty();

            for(let i in response.online)
            {
                let tempUser = response.online[i].username;

                $("<p></p>").text(tempUser).appendTo("#list-of-users");
            }

        },
        error: () => {
            console.log('An error occured')
        }
    });

}

function ChangeRoom(newRoom)
{

//$("#list-of-messages").empty();

currentRoom = newRoom;
    for(let i=0;i<chatRooms.length;i++) {
        if (currentRoom === i) {
            for (let i = 0; i < user.session.length; i++) {
                let messageToDisplay = `${user.session[i].user} ${user.session[i].date}: ${user.session[i].message}`;

                $("<p></p>").text(messageToDisplay).appendTo("#list-of-messages");
                console.log(user.session[length - 1].message);
            }
        }
    }
}